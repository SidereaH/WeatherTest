{"name": "Test get_json with weather API", "status": "failed", "statusDetails": {"message": "AssertionError: assert {'base': 'sta...37.6156}, ...} == {'base': 'sta...37.6156}, ...}\n  \n  Omitting 6 identical items, use -vv to show\n  Differing items:\n  {'main': {'feels_like': 269.75, 'grnd_level': 987, 'humidity': 69, 'pressure': 1007, ...}} != {'main': {'feels_like': 282.79, 'humidity': 67, 'pressure': 1024, 'temp': 284.15, ...}}\n  {'sys': {'country': 'RU', 'id': 2094500, 'sunrise': 1731647125, 'sunset': 1731676989, ...}} != {'sys': {'country': 'RU', 'id': 2011538, 'sunrise': 1632988421, 'sunset': 1633030985, ...}}\n  {'wind': {'deg': 255, 'gust': 7.29, 'speed': 4.1}} != {'wind': {'deg': 150, 'speed': 3}}\n  {'dt': 1731657285} != {'dt': 1633002236}...\n  \n  ...Full output truncated (6 lines hidden), use '-vv' to show", "trace": "event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\n\n    @pytest.mark.asyncio\n    @allure.feature(\"JSON response\")\n    @allure.story(\"Weather API\")\n    @allure.title(\"Test get_json with weather API\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.tag(\"json\", \"api\", \"weather\")\n    @allure.description(\"This test checks that the get_json function returns a correct response from weather API.\")\n    async def test_get_json_weather(event_loop):\n        url = \"https://api.openweathermap.org/data/2.5/weather?q=Moscow&appid=d1de271e5d73e0f7346c43f4ade03143\"\n        expected = {\n                     \"coord\" : {\"lon\" : 37.6156, \"lat\":55.7522},\n                     \"weather\":[{\"id\": 800, \"main\" : \"Clear\", \"description\" : \"clear sky\", \"icon\" : \"01d\"}],\n                     \"base\" : \"stations\",\n                     \"main\" : {\n                        \"temp\" : 284.15,\n                        \"feels_like\": 282.79,\n                        \"temp_min\" : 284.15,\n                        \"temp_max\" : 284.15,\n                        \"pressure\" : 1024,\n                        \"humidity\" : 67,\n    \n                     },\n                     \"visibility\" : 10000,\n                     \"wind\" : {\"speed\" :3, \"deg\": 150},\n                     \"clouds\" : {\"all\" : 0},\n                     \"dt\" : 1633002236,\n                     \"sys\": {\n                        \"type\" : 2,\n                        \"id\" : 2011538,\n                        \"country\" : \"RU\",\n                        \"sunrise\" : 1632988421,\n                        \"sunset\" : 1633030985,\n                     },\n                     \"timezone\" : 10800,\n                     \"id\" : 524901,\n                     \"name\" : \"Moscow\",\n                     \"cod\" : 200,\n        }\n        result = await get_json(url)\n        assert result is not None\n>       assert result == expected\nE       AssertionError: assert {'base': 'sta...37.6156}, ...} == {'base': 'sta...37.6156}, ...}\nE         \nE         Omitting 6 identical items, use -vv to show\nE         Differing items:\nE         {'main': {'feels_like': 269.75, 'grnd_level': 987, 'humidity': 69, 'pressure': 1007, ...}} != {'main': {'feels_like': 282.79, 'humidity': 67, 'pressure': 1024, 'temp': 284.15, ...}}\nE         {'sys': {'country': 'RU', 'id': 2094500, 'sunrise': 1731647125, 'sunset': 1731676989, ...}} != {'sys': {'country': 'RU', 'id': 2011538, 'sunrise': 1632988421, 'sunset': 1633030985, ...}}\nE         {'wind': {'deg': 255, 'gust': 7.29, 'speed': 4.1}} != {'wind': {'deg': 150, 'speed': 3}}\nE         {'dt': 1731657285} != {'dt': 1633002236}...\nE         \nE         ...Full output truncated (6 lines hidden), use '-vv' to show\n\ntest_app.py:45: AssertionError"}, "description": "This test checks that the get_json function returns a correct response from weather API.", "start": 1731658040994, "stop": 1731658041549, "uuid": "33ca9c86-b503-49b4-9165-1b529de85331", "historyId": "3a3846cd036a09f200ec6a1c579313ad", "testCaseId": "3a3846cd036a09f200ec6a1c579313ad", "fullName": "test_app#test_get_json_weather", "labels": [{"name": "tag", "value": "api"}, {"name": "tag", "value": "json"}, {"name": "severity", "value": "normal"}, {"name": "feature", "value": "JSON response"}, {"name": "story", "value": "Weather API"}, {"name": "tag", "value": "weather"}, {"name": "tag", "value": "asyncio"}, {"name": "suite", "value": "test_app"}, {"name": "host", "value": "fedora"}, {"name": "thread", "value": "14409-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_app"}]}